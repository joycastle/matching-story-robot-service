// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: rankactivity.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RankActivityUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID     int64  `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	HeadIcon   string `protobuf:"bytes,3,opt,name=HeadIcon,proto3" json:"HeadIcon,omitempty"`
	Level      int32  `protobuf:"varint,4,opt,name=Level,proto3" json:"Level,omitempty"`
	Medal      int32  `protobuf:"varint,5,opt,name=Medal,proto3" json:"Medal,omitempty"`
	UpdateTime int64  `protobuf:"varint,6,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
	Channel    int32  `protobuf:"varint,7,opt,name=Channel,proto3" json:"Channel,omitempty"`
}

func (x *RankActivityUserInfo) Reset() {
	*x = RankActivityUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rankactivity_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RankActivityUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RankActivityUserInfo) ProtoMessage() {}

func (x *RankActivityUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_rankactivity_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RankActivityUserInfo.ProtoReflect.Descriptor instead.
func (*RankActivityUserInfo) Descriptor() ([]byte, []int) {
	return file_rankactivity_proto_rawDescGZIP(), []int{0}
}

func (x *RankActivityUserInfo) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *RankActivityUserInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RankActivityUserInfo) GetHeadIcon() string {
	if x != nil {
		return x.HeadIcon
	}
	return ""
}

func (x *RankActivityUserInfo) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *RankActivityUserInfo) GetMedal() int32 {
	if x != nil {
		return x.Medal
	}
	return 0
}

func (x *RankActivityUserInfo) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *RankActivityUserInfo) GetChannel() int32 {
	if x != nil {
		return x.Channel
	}
	return 0
}

type RankActivityGroupInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityID      string                  `protobuf:"bytes,1,opt,name=ActivityID,proto3" json:"ActivityID,omitempty"`
	ActivityConfID  int32                   `protobuf:"varint,2,opt,name=ActivityConfID,proto3" json:"ActivityConfID,omitempty"`
	StartTime       int64                   `protobuf:"varint,3,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	JoinEndTime     int64                   `protobuf:"varint,4,opt,name=JoinEndTime,proto3" json:"JoinEndTime,omitempty"`
	EndTime         int64                   `protobuf:"varint,5,opt,name=EndTime,proto3" json:"EndTime,omitempty"`
	RankInfoArr     []*RankActivityUserInfo `protobuf:"bytes,6,rep,name=RankInfoArr,proto3" json:"RankInfoArr,omitempty"`
	GroupID         int64                   `protobuf:"varint,7,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	ActivityGroupId string                  `protobuf:"bytes,8,opt,name=ActivityGroupId,proto3" json:"ActivityGroupId,omitempty"`
}

func (x *RankActivityGroupInfo) Reset() {
	*x = RankActivityGroupInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rankactivity_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RankActivityGroupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RankActivityGroupInfo) ProtoMessage() {}

func (x *RankActivityGroupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_rankactivity_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RankActivityGroupInfo.ProtoReflect.Descriptor instead.
func (*RankActivityGroupInfo) Descriptor() ([]byte, []int) {
	return file_rankactivity_proto_rawDescGZIP(), []int{1}
}

func (x *RankActivityGroupInfo) GetActivityID() string {
	if x != nil {
		return x.ActivityID
	}
	return ""
}

func (x *RankActivityGroupInfo) GetActivityConfID() int32 {
	if x != nil {
		return x.ActivityConfID
	}
	return 0
}

func (x *RankActivityGroupInfo) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *RankActivityGroupInfo) GetJoinEndTime() int64 {
	if x != nil {
		return x.JoinEndTime
	}
	return 0
}

func (x *RankActivityGroupInfo) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *RankActivityGroupInfo) GetRankInfoArr() []*RankActivityUserInfo {
	if x != nil {
		return x.RankInfoArr
	}
	return nil
}

func (x *RankActivityGroupInfo) GetGroupID() int64 {
	if x != nil {
		return x.GroupID
	}
	return 0
}

func (x *RankActivityGroupInfo) GetActivityGroupId() string {
	if x != nil {
		return x.ActivityGroupId
	}
	return ""
}

//method:syncrankactivityinfo
type CSSyncRankActivityInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level     int32 `protobuf:"varint,1,opt,name=Level,proto3" json:"Level,omitempty"`
	Medal     int32 `protobuf:"varint,2,opt,name=Medal,proto3" json:"Medal,omitempty"`
	LevelType int32 `protobuf:"varint,3,opt,name=LevelType,proto3" json:"LevelType,omitempty"` //1普通；2是满级或者精英赛
	UserType  int32 `protobuf:"varint,4,opt,name=userType,proto3" json:"userType,omitempty"`   //0免费；1付费
}

func (x *CSSyncRankActivityInfo) Reset() {
	*x = CSSyncRankActivityInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rankactivity_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSSyncRankActivityInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSSyncRankActivityInfo) ProtoMessage() {}

func (x *CSSyncRankActivityInfo) ProtoReflect() protoreflect.Message {
	mi := &file_rankactivity_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSSyncRankActivityInfo.ProtoReflect.Descriptor instead.
func (*CSSyncRankActivityInfo) Descriptor() ([]byte, []int) {
	return file_rankactivity_proto_rawDescGZIP(), []int{2}
}

func (x *CSSyncRankActivityInfo) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *CSSyncRankActivityInfo) GetMedal() int32 {
	if x != nil {
		return x.Medal
	}
	return 0
}

func (x *CSSyncRankActivityInfo) GetLevelType() int32 {
	if x != nil {
		return x.LevelType
	}
	return 0
}

func (x *CSSyncRankActivityInfo) GetUserType() int32 {
	if x != nil {
		return x.UserType
	}
	return 0
}

type SCSyncRankActivityInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupInfo *RankActivityGroupInfo `protobuf:"bytes,1,opt,name=GroupInfo,proto3" json:"GroupInfo,omitempty"`
}

func (x *SCSyncRankActivityInfo) Reset() {
	*x = SCSyncRankActivityInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rankactivity_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCSyncRankActivityInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCSyncRankActivityInfo) ProtoMessage() {}

func (x *SCSyncRankActivityInfo) ProtoReflect() protoreflect.Message {
	mi := &file_rankactivity_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCSyncRankActivityInfo.ProtoReflect.Descriptor instead.
func (*SCSyncRankActivityInfo) Descriptor() ([]byte, []int) {
	return file_rankactivity_proto_rawDescGZIP(), []int{3}
}

func (x *SCSyncRankActivityInfo) GetGroupInfo() *RankActivityGroupInfo {
	if x != nil {
		return x.GroupInfo
	}
	return nil
}

//method:getrankactivityinfo
type CSGetRankActivityInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityID     string `protobuf:"bytes,1,opt,name=ActivityID,proto3" json:"ActivityID,omitempty"`
	ActivityConfID int32  `protobuf:"varint,2,opt,name=ActivityConfID,proto3" json:"ActivityConfID,omitempty"`
	StartTime      int64  `protobuf:"varint,3,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
}

func (x *CSGetRankActivityInfo) Reset() {
	*x = CSGetRankActivityInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rankactivity_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSGetRankActivityInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSGetRankActivityInfo) ProtoMessage() {}

func (x *CSGetRankActivityInfo) ProtoReflect() protoreflect.Message {
	mi := &file_rankactivity_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSGetRankActivityInfo.ProtoReflect.Descriptor instead.
func (*CSGetRankActivityInfo) Descriptor() ([]byte, []int) {
	return file_rankactivity_proto_rawDescGZIP(), []int{4}
}

func (x *CSGetRankActivityInfo) GetActivityID() string {
	if x != nil {
		return x.ActivityID
	}
	return ""
}

func (x *CSGetRankActivityInfo) GetActivityConfID() int32 {
	if x != nil {
		return x.ActivityConfID
	}
	return 0
}

func (x *CSGetRankActivityInfo) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

type SCGetRankActivityInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupInfo *RankActivityGroupInfo `protobuf:"bytes,1,opt,name=GroupInfo,proto3" json:"GroupInfo,omitempty"`
}

func (x *SCGetRankActivityInfo) Reset() {
	*x = SCGetRankActivityInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rankactivity_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCGetRankActivityInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCGetRankActivityInfo) ProtoMessage() {}

func (x *SCGetRankActivityInfo) ProtoReflect() protoreflect.Message {
	mi := &file_rankactivity_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCGetRankActivityInfo.ProtoReflect.Descriptor instead.
func (*SCGetRankActivityInfo) Descriptor() ([]byte, []int) {
	return file_rankactivity_proto_rawDescGZIP(), []int{5}
}

func (x *SCGetRankActivityInfo) GetGroupInfo() *RankActivityGroupInfo {
	if x != nil {
		return x.GroupInfo
	}
	return nil
}

//method:getrankactivitystatus
type CSGetRankActivityStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityInfo *CSSyncRankActivityInfo `protobuf:"bytes,1,opt,name=activityInfo,proto3" json:"activityInfo,omitempty"`
}

func (x *CSGetRankActivityStatus) Reset() {
	*x = CSGetRankActivityStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rankactivity_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSGetRankActivityStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSGetRankActivityStatus) ProtoMessage() {}

func (x *CSGetRankActivityStatus) ProtoReflect() protoreflect.Message {
	mi := &file_rankactivity_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSGetRankActivityStatus.ProtoReflect.Descriptor instead.
func (*CSGetRankActivityStatus) Descriptor() ([]byte, []int) {
	return file_rankactivity_proto_rawDescGZIP(), []int{6}
}

func (x *CSGetRankActivityStatus) GetActivityInfo() *CSSyncRankActivityInfo {
	if x != nil {
		return x.ActivityInfo
	}
	return nil
}

type SCGetRankActivityStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityID     string `protobuf:"bytes,1,opt,name=ActivityID,proto3" json:"ActivityID,omitempty"` //根据规则生成的活动唯一ID
	ActivityConfID int32  `protobuf:"varint,2,opt,name=ActivityConfID,proto3" json:"ActivityConfID,omitempty"`
	StartTime      int64  `protobuf:"varint,3,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	JoinEndTime    int64  `protobuf:"varint,4,opt,name=JoinEndTime,proto3" json:"JoinEndTime,omitempty"`
	EndTime        int64  `protobuf:"varint,5,opt,name=EndTime,proto3" json:"EndTime,omitempty"`
	//0不存在
	//1存在且可以参加
	//2存在但是不能参加
	//3活动存在，且拥有排名
	Status          int32  `protobuf:"varint,6,opt,name=Status,proto3" json:"Status,omitempty"`
	GroupID         int64  `protobuf:"varint,7,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	ActivityGroupId string `protobuf:"bytes,8,opt,name=ActivityGroupId,proto3" json:"ActivityGroupId,omitempty"`
	Ranking         int32  `protobuf:"varint,9,opt,name=Ranking,proto3" json:"Ranking,omitempty"`
}

func (x *SCGetRankActivityStatus) Reset() {
	*x = SCGetRankActivityStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rankactivity_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCGetRankActivityStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCGetRankActivityStatus) ProtoMessage() {}

func (x *SCGetRankActivityStatus) ProtoReflect() protoreflect.Message {
	mi := &file_rankactivity_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCGetRankActivityStatus.ProtoReflect.Descriptor instead.
func (*SCGetRankActivityStatus) Descriptor() ([]byte, []int) {
	return file_rankactivity_proto_rawDescGZIP(), []int{7}
}

func (x *SCGetRankActivityStatus) GetActivityID() string {
	if x != nil {
		return x.ActivityID
	}
	return ""
}

func (x *SCGetRankActivityStatus) GetActivityConfID() int32 {
	if x != nil {
		return x.ActivityConfID
	}
	return 0
}

func (x *SCGetRankActivityStatus) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *SCGetRankActivityStatus) GetJoinEndTime() int64 {
	if x != nil {
		return x.JoinEndTime
	}
	return 0
}

func (x *SCGetRankActivityStatus) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *SCGetRankActivityStatus) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SCGetRankActivityStatus) GetGroupID() int64 {
	if x != nil {
		return x.GroupID
	}
	return 0
}

func (x *SCGetRankActivityStatus) GetActivityGroupId() string {
	if x != nil {
		return x.ActivityGroupId
	}
	return ""
}

func (x *SCGetRankActivityStatus) GetRanking() int32 {
	if x != nil {
		return x.Ranking
	}
	return 0
}

var File_rankactivity_proto protoreflect.FileDescriptor

var file_rankactivity_proto_rawDesc = []byte{
	0x0a, 0x12, 0x72, 0x61, 0x6e, 0x6b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc4, 0x01, 0x0a, 0x14, 0x52, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x48, 0x65, 0x61,
	0x64, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x48, 0x65, 0x61,
	0x64, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x4d,
	0x65, 0x64, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4d, 0x65, 0x64, 0x61,
	0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0xb6, 0x02, 0x0a, 0x15,
	0x52, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x43, 0x6f, 0x6e, 0x66, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x49, 0x44, 0x12, 0x1c, 0x0a,
	0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x4a,
	0x6f, 0x69, 0x6e, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x4a, 0x6f, 0x69, 0x6e, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x0b, 0x52, 0x61, 0x6e, 0x6b, 0x49,
	0x6e, 0x66, 0x6f, 0x41, 0x72, 0x72, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x52,
	0x61, 0x6e, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x52, 0x61, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x72, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x22, 0x7e, 0x0a, 0x16, 0x43, 0x53, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x61,
	0x6e, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14,
	0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x65, 0x64, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x4d, 0x65, 0x64, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x4e, 0x0a, 0x16, 0x53, 0x43, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x61,
	0x6e, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x34,
	0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x7d, 0x0a, 0x15, 0x43, 0x53, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6e,
	0x6b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a,
	0x0a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x44, 0x12, 0x26, 0x0a,
	0x0e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43,
	0x6f, 0x6e, 0x66, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x4d, 0x0a, 0x15, 0x53, 0x43, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x6b,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x34, 0x0a, 0x09,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x56, 0x0a, 0x17, 0x43, 0x53, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3b, 0x0a,
	0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x43, 0x53, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x61, 0x6e, 0x6b,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xb1, 0x02, 0x0a, 0x17, 0x53,
	0x43, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x49, 0x44, 0x12, 0x1c,
	0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x4a, 0x6f, 0x69, 0x6e, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x4a, 0x6f, 0x69, 0x6e, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x42, 0x17,
	0x48, 0x01, 0x5a, 0x06, 0x2e, 0x2f, 0x3b, 0x61, 0x70, 0x69, 0xaa, 0x02, 0x0a, 0x4d, 0x4d, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rankactivity_proto_rawDescOnce sync.Once
	file_rankactivity_proto_rawDescData = file_rankactivity_proto_rawDesc
)

func file_rankactivity_proto_rawDescGZIP() []byte {
	file_rankactivity_proto_rawDescOnce.Do(func() {
		file_rankactivity_proto_rawDescData = protoimpl.X.CompressGZIP(file_rankactivity_proto_rawDescData)
	})
	return file_rankactivity_proto_rawDescData
}

var file_rankactivity_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_rankactivity_proto_goTypes = []interface{}{
	(*RankActivityUserInfo)(nil),    // 0: RankActivityUserInfo
	(*RankActivityGroupInfo)(nil),   // 1: RankActivityGroupInfo
	(*CSSyncRankActivityInfo)(nil),  // 2: CSSyncRankActivityInfo
	(*SCSyncRankActivityInfo)(nil),  // 3: SCSyncRankActivityInfo
	(*CSGetRankActivityInfo)(nil),   // 4: CSGetRankActivityInfo
	(*SCGetRankActivityInfo)(nil),   // 5: SCGetRankActivityInfo
	(*CSGetRankActivityStatus)(nil), // 6: CSGetRankActivityStatus
	(*SCGetRankActivityStatus)(nil), // 7: SCGetRankActivityStatus
}
var file_rankactivity_proto_depIdxs = []int32{
	0, // 0: RankActivityGroupInfo.RankInfoArr:type_name -> RankActivityUserInfo
	1, // 1: SCSyncRankActivityInfo.GroupInfo:type_name -> RankActivityGroupInfo
	1, // 2: SCGetRankActivityInfo.GroupInfo:type_name -> RankActivityGroupInfo
	2, // 3: CSGetRankActivityStatus.activityInfo:type_name -> CSSyncRankActivityInfo
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_rankactivity_proto_init() }
func file_rankactivity_proto_init() {
	if File_rankactivity_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rankactivity_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RankActivityUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rankactivity_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RankActivityGroupInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rankactivity_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSSyncRankActivityInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rankactivity_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCSyncRankActivityInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rankactivity_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSGetRankActivityInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rankactivity_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCGetRankActivityInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rankactivity_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSGetRankActivityStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rankactivity_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCGetRankActivityStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rankactivity_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_rankactivity_proto_goTypes,
		DependencyIndexes: file_rankactivity_proto_depIdxs,
		MessageInfos:      file_rankactivity_proto_msgTypes,
	}.Build()
	File_rankactivity_proto = out.File
	file_rankactivity_proto_rawDesc = nil
	file_rankactivity_proto_goTypes = nil
	file_rankactivity_proto_depIdxs = nil
}
