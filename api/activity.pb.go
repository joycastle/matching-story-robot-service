// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: activity.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 活动信息
type ActivityInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                     // 活动ID
	ActivityType int32 `protobuf:"varint,2,opt,name=activityType,proto3" json:"activityType,omitempty"` // 活动类型
	State        int32 `protobuf:"varint,3,opt,name=state,proto3" json:"state,omitempty"`               // 活动状态
	BeginTime    int64 `protobuf:"varint,4,opt,name=beginTime,proto3" json:"beginTime,omitempty"`       // 开始时间
	EndTime      int64 `protobuf:"varint,5,opt,name=endTime,proto3" json:"endTime,omitempty"`           // 结束时间
	ShowTime     int64 `protobuf:"varint,6,opt,name=showTime,proto3" json:"showTime,omitempty"`         // 开始展示时间
	UniqueId     int64 `protobuf:"varint,7,opt,name=uniqueId,proto3" json:"uniqueId,omitempty"`         // 活动唯一ID 活动开启时生成
}

func (x *ActivityInfo) Reset() {
	*x = ActivityInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activity_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityInfo) ProtoMessage() {}

func (x *ActivityInfo) ProtoReflect() protoreflect.Message {
	mi := &file_activity_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityInfo.ProtoReflect.Descriptor instead.
func (*ActivityInfo) Descriptor() ([]byte, []int) {
	return file_activity_proto_rawDescGZIP(), []int{0}
}

func (x *ActivityInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ActivityInfo) GetActivityType() int32 {
	if x != nil {
		return x.ActivityType
	}
	return 0
}

func (x *ActivityInfo) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *ActivityInfo) GetBeginTime() int64 {
	if x != nil {
		return x.BeginTime
	}
	return 0
}

func (x *ActivityInfo) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ActivityInfo) GetShowTime() int64 {
	if x != nil {
		return x.ShowTime
	}
	return 0
}

func (x *ActivityInfo) GetUniqueId() int64 {
	if x != nil {
		return x.UniqueId
	}
	return 0
}

// 请求活动信息
type CSActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CSActivity) Reset() {
	*x = CSActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activity_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSActivity) ProtoMessage() {}

func (x *CSActivity) ProtoReflect() protoreflect.Message {
	mi := &file_activity_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSActivity.ProtoReflect.Descriptor instead.
func (*CSActivity) Descriptor() ([]byte, []int) {
	return file_activity_proto_rawDescGZIP(), []int{1}
}

type SCActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityInfos []*ActivityInfo `protobuf:"bytes,1,rep,name=activityInfos,proto3" json:"activityInfos,omitempty"` // 活动列表
}

func (x *SCActivity) Reset() {
	*x = SCActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activity_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCActivity) ProtoMessage() {}

func (x *SCActivity) ProtoReflect() protoreflect.Message {
	mi := &file_activity_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCActivity.ProtoReflect.Descriptor instead.
func (*SCActivity) Descriptor() ([]byte, []int) {
	return file_activity_proto_rawDescGZIP(), []int{2}
}

func (x *SCActivity) GetActivityInfos() []*ActivityInfo {
	if x != nil {
		return x.ActivityInfos
	}
	return nil
}

// 活动结算获得积分
type CSActivityScore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`             // 活动ID
	Score    int32 `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`       // 活动当前总积分
	GroupId  int64 `protobuf:"varint,3,opt,name=groupId,proto3" json:"groupId,omitempty"`   // 玩家所属组ID
	UniqueId int64 `protobuf:"varint,4,opt,name=uniqueId,proto3" json:"uniqueId,omitempty"` // 活动唯一ID 活动开启时生成
}

func (x *CSActivityScore) Reset() {
	*x = CSActivityScore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activity_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSActivityScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSActivityScore) ProtoMessage() {}

func (x *CSActivityScore) ProtoReflect() protoreflect.Message {
	mi := &file_activity_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSActivityScore.ProtoReflect.Descriptor instead.
func (*CSActivityScore) Descriptor() ([]byte, []int) {
	return file_activity_proto_rawDescGZIP(), []int{3}
}

func (x *CSActivityScore) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CSActivityScore) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *CSActivityScore) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *CSActivityScore) GetUniqueId() int64 {
	if x != nil {
		return x.UniqueId
	}
	return 0
}

type SCActivityScore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`             // 活动ID
	Score    int32 `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`       // 活动当前总积分
	GroupId  int64 `protobuf:"varint,3,opt,name=groupId,proto3" json:"groupId,omitempty"`   // 玩家所属组ID
	UniqueId int64 `protobuf:"varint,4,opt,name=uniqueId,proto3" json:"uniqueId,omitempty"` // 活动唯一ID 活动开启时生成
}

func (x *SCActivityScore) Reset() {
	*x = SCActivityScore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activity_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCActivityScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCActivityScore) ProtoMessage() {}

func (x *SCActivityScore) ProtoReflect() protoreflect.Message {
	mi := &file_activity_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCActivityScore.ProtoReflect.Descriptor instead.
func (*SCActivityScore) Descriptor() ([]byte, []int) {
	return file_activity_proto_rawDescGZIP(), []int{4}
}

func (x *SCActivityScore) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SCActivityScore) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *SCActivityScore) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *SCActivityScore) GetUniqueId() int64 {
	if x != nil {
		return x.UniqueId
	}
	return 0
}

// 请求活动排行榜
type CSActivityRank struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RankType int32 `protobuf:"varint,1,opt,name=rankType,proto3" json:"rankType,omitempty"`
	Id       int32 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`             // 活动ID
	Score    int32 `protobuf:"varint,3,opt,name=score,proto3" json:"score,omitempty"`       // 活动积分
	GroupId  int64 `protobuf:"varint,4,opt,name=groupId,proto3" json:"groupId,omitempty"`   // 玩家所属组ID
	UniqueId int64 `protobuf:"varint,5,opt,name=uniqueId,proto3" json:"uniqueId,omitempty"` // 活动唯一ID 活动开启时生成
}

func (x *CSActivityRank) Reset() {
	*x = CSActivityRank{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activity_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSActivityRank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSActivityRank) ProtoMessage() {}

func (x *CSActivityRank) ProtoReflect() protoreflect.Message {
	mi := &file_activity_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSActivityRank.ProtoReflect.Descriptor instead.
func (*CSActivityRank) Descriptor() ([]byte, []int) {
	return file_activity_proto_rawDescGZIP(), []int{5}
}

func (x *CSActivityRank) GetRankType() int32 {
	if x != nil {
		return x.RankType
	}
	return 0
}

func (x *CSActivityRank) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CSActivityRank) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *CSActivityRank) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *CSActivityRank) GetUniqueId() int64 {
	if x != nil {
		return x.UniqueId
	}
	return 0
}

// 排行榜用户基本信息 （这个后面可能会修改、统一用一个基本信息）
type RankUserBaseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                // ID
	Score      int32  `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`          // 积分
	Name       string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`             // 姓名
	HeadIcon   string `protobuf:"bytes,4,opt,name=headIcon,proto3" json:"headIcon,omitempty"`     // 头像
	Rank       int32  `protobuf:"varint,5,opt,name=rank,proto3" json:"rank,omitempty"`            // 排名
	Country    string `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`       //国家
	Channel    int32  `protobuf:"varint,7,opt,name=channel,proto3" json:"channel,omitempty"`      //
	Level      int32  `protobuf:"varint,8,opt,name=level,proto3" json:"level,omitempty"`          //成员等级
	GuildBadge string `protobuf:"bytes,9,opt,name=guildBadge,proto3" json:"guildBadge,omitempty"` //　公会徽章
	GuildName  string `protobuf:"bytes,10,opt,name=guildName,proto3" json:"guildName,omitempty"`  // 公会名称
	ScoreTime  int64  `protobuf:"varint,11,opt,name=scoreTime,proto3" json:"scoreTime,omitempty"` // 生成该积分的时间
}

func (x *RankUserBaseInfo) Reset() {
	*x = RankUserBaseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activity_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RankUserBaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RankUserBaseInfo) ProtoMessage() {}

func (x *RankUserBaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_activity_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RankUserBaseInfo.ProtoReflect.Descriptor instead.
func (*RankUserBaseInfo) Descriptor() ([]byte, []int) {
	return file_activity_proto_rawDescGZIP(), []int{6}
}

func (x *RankUserBaseInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RankUserBaseInfo) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *RankUserBaseInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RankUserBaseInfo) GetHeadIcon() string {
	if x != nil {
		return x.HeadIcon
	}
	return ""
}

func (x *RankUserBaseInfo) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *RankUserBaseInfo) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *RankUserBaseInfo) GetChannel() int32 {
	if x != nil {
		return x.Channel
	}
	return 0
}

func (x *RankUserBaseInfo) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *RankUserBaseInfo) GetGuildBadge() string {
	if x != nil {
		return x.GuildBadge
	}
	return ""
}

func (x *RankUserBaseInfo) GetGuildName() string {
	if x != nil {
		return x.GuildName
	}
	return ""
}

func (x *RankUserBaseInfo) GetScoreTime() int64 {
	if x != nil {
		return x.ScoreTime
	}
	return 0
}

type SCActivityRank struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RankType int32               `protobuf:"varint,1,opt,name=rankType,proto3" json:"rankType,omitempty"`
	UseInfos []*RankUserBaseInfo `protobuf:"bytes,2,rep,name=useInfos,proto3" json:"useInfos,omitempty"`  // 玩家信息列表
	State    int32               `protobuf:"varint,3,opt,name=state,proto3" json:"state,omitempty"`       //  当前活动状态
	GroupId  int64               `protobuf:"varint,4,opt,name=groupId,proto3" json:"groupId,omitempty"`   // 玩家所属组ID
	UniqueId int64               `protobuf:"varint,5,opt,name=uniqueId,proto3" json:"uniqueId,omitempty"` // 活动唯一ID 活动开启时生成
}

func (x *SCActivityRank) Reset() {
	*x = SCActivityRank{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activity_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCActivityRank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCActivityRank) ProtoMessage() {}

func (x *SCActivityRank) ProtoReflect() protoreflect.Message {
	mi := &file_activity_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCActivityRank.ProtoReflect.Descriptor instead.
func (*SCActivityRank) Descriptor() ([]byte, []int) {
	return file_activity_proto_rawDescGZIP(), []int{7}
}

func (x *SCActivityRank) GetRankType() int32 {
	if x != nil {
		return x.RankType
	}
	return 0
}

func (x *SCActivityRank) GetUseInfos() []*RankUserBaseInfo {
	if x != nil {
		return x.UseInfos
	}
	return nil
}

func (x *SCActivityRank) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *SCActivityRank) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *SCActivityRank) GetUniqueId() int64 {
	if x != nil {
		return x.UniqueId
	}
	return 0
}

// 请求加入活动
type CSJoinActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 活动ID
}

func (x *CSJoinActivity) Reset() {
	*x = CSJoinActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activity_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSJoinActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSJoinActivity) ProtoMessage() {}

func (x *CSJoinActivity) ProtoReflect() protoreflect.Message {
	mi := &file_activity_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSJoinActivity.ProtoReflect.Descriptor instead.
func (*CSJoinActivity) Descriptor() ([]byte, []int) {
	return file_activity_proto_rawDescGZIP(), []int{8}
}

func (x *CSJoinActivity) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 请求加入活动返回
type SCJoinActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                           // 活动ID
	GroupId         int64 `protobuf:"varint,2,opt,name=groupId,proto3" json:"groupId,omitempty"`                 // 玩家所属组ID
	UniqueId        int64 `protobuf:"varint,3,opt,name=uniqueId,proto3" json:"uniqueId,omitempty"`               // 活动唯一ID 活动开启时生成
	CreateGroupTime int64 `protobuf:"varint,4,opt,name=createGroupTime,proto3" json:"createGroupTime,omitempty"` // 创建组时间
	Rank            int32 `protobuf:"varint,5,opt,name=rank,proto3" json:"rank,omitempty"`                       // 组内排名
}

func (x *SCJoinActivity) Reset() {
	*x = SCJoinActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activity_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCJoinActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCJoinActivity) ProtoMessage() {}

func (x *SCJoinActivity) ProtoReflect() protoreflect.Message {
	mi := &file_activity_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCJoinActivity.ProtoReflect.Descriptor instead.
func (*SCJoinActivity) Descriptor() ([]byte, []int) {
	return file_activity_proto_rawDescGZIP(), []int{9}
}

func (x *SCJoinActivity) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SCJoinActivity) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *SCJoinActivity) GetUniqueId() int64 {
	if x != nil {
		return x.UniqueId
	}
	return 0
}

func (x *SCJoinActivity) GetCreateGroupTime() int64 {
	if x != nil {
		return x.CreateGroupTime
	}
	return 0
}

func (x *SCJoinActivity) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

// 领取奖励
type CSReceiveAward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId  int64 `protobuf:"varint,1,opt,name=groupId,proto3" json:"groupId,omitempty"`   // 玩家所属组ID
	UniqueId int64 `protobuf:"varint,2,opt,name=uniqueId,proto3" json:"uniqueId,omitempty"` // 活动唯一ID 活动开启时生成
}

func (x *CSReceiveAward) Reset() {
	*x = CSReceiveAward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activity_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSReceiveAward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSReceiveAward) ProtoMessage() {}

func (x *CSReceiveAward) ProtoReflect() protoreflect.Message {
	mi := &file_activity_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSReceiveAward.ProtoReflect.Descriptor instead.
func (*CSReceiveAward) Descriptor() ([]byte, []int) {
	return file_activity_proto_rawDescGZIP(), []int{10}
}

func (x *CSReceiveAward) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *CSReceiveAward) GetUniqueId() int64 {
	if x != nil {
		return x.UniqueId
	}
	return 0
}

// 领取奖励结果
type SCReceiveAward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result int32 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"` // 返回 2000正常领取，其它值错误
}

func (x *SCReceiveAward) Reset() {
	*x = SCReceiveAward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activity_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCReceiveAward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCReceiveAward) ProtoMessage() {}

func (x *SCReceiveAward) ProtoReflect() protoreflect.Message {
	mi := &file_activity_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCReceiveAward.ProtoReflect.Descriptor instead.
func (*SCReceiveAward) Descriptor() ([]byte, []int) {
	return file_activity_proto_rawDescGZIP(), []int{11}
}

func (x *SCReceiveAward) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

var File_activity_proto protoreflect.FileDescriptor

var file_activity_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xc8, 0x01, 0x0a, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62,
	0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x68, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x22, 0x0c, 0x0a, 0x0a, 0x43,
	0x53, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x22, 0x41, 0x0a, 0x0a, 0x53, 0x43, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x33, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x6d, 0x0a, 0x0f,
	0x43, 0x53, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x22, 0x6d, 0x0a, 0x0f, 0x53,
	0x43, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x22, 0x88, 0x01, 0x0a, 0x0e, 0x43,
	0x53, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x61, 0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x72, 0x61, 0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x69,
	0x71, 0x75, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x6e, 0x69,
	0x71, 0x75, 0x65, 0x49, 0x64, 0x22, 0xa2, 0x02, 0x0a, 0x10, 0x52, 0x61, 0x6e, 0x6b, 0x55, 0x73,
	0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x65, 0x61, 0x64, 0x49, 0x63, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x65, 0x61, 0x64, 0x49, 0x63, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x72, 0x61, 0x6e, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1e,
	0x0a, 0x0a, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x42, 0x61, 0x64, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x42, 0x61, 0x64, 0x67, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xa7, 0x01, 0x0a, 0x0e, 0x53,
	0x43, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x61, 0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x72, 0x61, 0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x52, 0x61,
	0x6e, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x71,
	0x75, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71,
	0x75, 0x65, 0x49, 0x64, 0x22, 0x20, 0x0a, 0x0e, 0x43, 0x53, 0x4a, 0x6f, 0x69, 0x6e, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x94, 0x01, 0x0a, 0x0e, 0x53, 0x43, 0x4a, 0x6f, 0x69,
	0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12,
	0x28, 0x0a, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e,
	0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x22, 0x46, 0x0a,
	0x0e, 0x43, 0x53, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x77, 0x61, 0x72, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x69,
	0x71, 0x75, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x6e, 0x69,
	0x71, 0x75, 0x65, 0x49, 0x64, 0x22, 0x28, 0x0a, 0x0e, 0x53, 0x43, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x41, 0x77, 0x61, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42,
	0x17, 0x48, 0x01, 0x5a, 0x06, 0x2e, 0x2f, 0x3b, 0x61, 0x70, 0x69, 0xaa, 0x02, 0x0a, 0x4d, 0x4d,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_activity_proto_rawDescOnce sync.Once
	file_activity_proto_rawDescData = file_activity_proto_rawDesc
)

func file_activity_proto_rawDescGZIP() []byte {
	file_activity_proto_rawDescOnce.Do(func() {
		file_activity_proto_rawDescData = protoimpl.X.CompressGZIP(file_activity_proto_rawDescData)
	})
	return file_activity_proto_rawDescData
}

var file_activity_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_activity_proto_goTypes = []interface{}{
	(*ActivityInfo)(nil),     // 0: ActivityInfo
	(*CSActivity)(nil),       // 1: CSActivity
	(*SCActivity)(nil),       // 2: SCActivity
	(*CSActivityScore)(nil),  // 3: CSActivityScore
	(*SCActivityScore)(nil),  // 4: SCActivityScore
	(*CSActivityRank)(nil),   // 5: CSActivityRank
	(*RankUserBaseInfo)(nil), // 6: RankUserBaseInfo
	(*SCActivityRank)(nil),   // 7: SCActivityRank
	(*CSJoinActivity)(nil),   // 8: CSJoinActivity
	(*SCJoinActivity)(nil),   // 9: SCJoinActivity
	(*CSReceiveAward)(nil),   // 10: CSReceiveAward
	(*SCReceiveAward)(nil),   // 11: SCReceiveAward
}
var file_activity_proto_depIdxs = []int32{
	0, // 0: SCActivity.activityInfos:type_name -> ActivityInfo
	6, // 1: SCActivityRank.useInfos:type_name -> RankUserBaseInfo
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_activity_proto_init() }
func file_activity_proto_init() {
	if File_activity_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_activity_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_activity_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_activity_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_activity_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSActivityScore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_activity_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCActivityScore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_activity_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSActivityRank); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_activity_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RankUserBaseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_activity_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCActivityRank); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_activity_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSJoinActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_activity_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCJoinActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_activity_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSReceiveAward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_activity_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCReceiveAward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_activity_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_activity_proto_goTypes,
		DependencyIndexes: file_activity_proto_depIdxs,
		MessageInfos:      file_activity_proto_msgTypes,
	}.Build()
	File_activity_proto = out.File
	file_activity_proto_rawDesc = nil
	file_activity_proto_goTypes = nil
	file_activity_proto_depIdxs = nil
}
