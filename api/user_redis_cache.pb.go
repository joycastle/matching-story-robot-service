// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: user_redis_cache.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//玩家简易信息
type UserSimpleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`            // userID
	Level          int32    `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`      // 等级
	Name           string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`         // 姓名
	HeadIcon       string   `protobuf:"bytes,4,opt,name=headIcon,proto3" json:"headIcon,omitempty"` // 头像
	Country        string   `protobuf:"bytes,5,opt,name=country,proto3" json:"country,omitempty"`   // 国家
	Like           int32    `protobuf:"varint,6,opt,name=like,proto3" json:"like,omitempty"`        // 玩家点赞
	Channel        int32    `protobuf:"varint,7,opt,name=channel,proto3" json:"channel,omitempty"`  //
	Star           int32    `protobuf:"varint,8,opt,name=star,proto3" json:"star,omitempty"`        // 星星 满级玩法，星星个数，可以理解为level2
	StarActivityID int64    `protobuf:"varint,9,opt,name=starActivityID,proto3" json:"starActivityID,omitempty"`
	UserHelp       int32    `protobuf:"varint,10,opt,name=UserHelp,proto3" json:"UserHelp,omitempty"`
	UnlockID       int32    `protobuf:"varint,11,opt,name=unlockID,proto3" json:"unlockID,omitempty"`           //解锁地格的ID
	BuyData        *BuyData `protobuf:"bytes,12,opt,name=buyData,proto3" json:"buyData,omitempty"`              //购买信息
	CheatUser      int32    `protobuf:"varint,13,opt,name=CheatUser,proto3" json:"CheatUser,omitempty"`         //是否是作弊用户
	UpdateTime     int64    `protobuf:"varint,14,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`       //最后存档时间
	ClientVersion  int32    `protobuf:"varint,15,opt,name=ClientVersion,proto3" json:"ClientVersion,omitempty"` //前端版本
}

func (x *UserSimpleInfo) Reset() {
	*x = UserSimpleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_redis_cache_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSimpleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSimpleInfo) ProtoMessage() {}

func (x *UserSimpleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_user_redis_cache_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSimpleInfo.ProtoReflect.Descriptor instead.
func (*UserSimpleInfo) Descriptor() ([]byte, []int) {
	return file_user_redis_cache_proto_rawDescGZIP(), []int{0}
}

func (x *UserSimpleInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserSimpleInfo) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *UserSimpleInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserSimpleInfo) GetHeadIcon() string {
	if x != nil {
		return x.HeadIcon
	}
	return ""
}

func (x *UserSimpleInfo) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *UserSimpleInfo) GetLike() int32 {
	if x != nil {
		return x.Like
	}
	return 0
}

func (x *UserSimpleInfo) GetChannel() int32 {
	if x != nil {
		return x.Channel
	}
	return 0
}

func (x *UserSimpleInfo) GetStar() int32 {
	if x != nil {
		return x.Star
	}
	return 0
}

func (x *UserSimpleInfo) GetStarActivityID() int64 {
	if x != nil {
		return x.StarActivityID
	}
	return 0
}

func (x *UserSimpleInfo) GetUserHelp() int32 {
	if x != nil {
		return x.UserHelp
	}
	return 0
}

func (x *UserSimpleInfo) GetUnlockID() int32 {
	if x != nil {
		return x.UnlockID
	}
	return 0
}

func (x *UserSimpleInfo) GetBuyData() *BuyData {
	if x != nil {
		return x.BuyData
	}
	return nil
}

func (x *UserSimpleInfo) GetCheatUser() int32 {
	if x != nil {
		return x.CheatUser
	}
	return 0
}

func (x *UserSimpleInfo) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *UserSimpleInfo) GetClientVersion() int32 {
	if x != nil {
		return x.ClientVersion
	}
	return 0
}

//好友简易数据
type FriendSimpleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendType int32 `protobuf:"varint,1,opt,name=friendType,proto3" json:"friendType,omitempty"` //好友类型
	UserID     int64 `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"`         //userID
}

func (x *FriendSimpleInfo) Reset() {
	*x = FriendSimpleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_redis_cache_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendSimpleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendSimpleInfo) ProtoMessage() {}

func (x *FriendSimpleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_user_redis_cache_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendSimpleInfo.ProtoReflect.Descriptor instead.
func (*FriendSimpleInfo) Descriptor() ([]byte, []int) {
	return file_user_redis_cache_proto_rawDescGZIP(), []int{1}
}

func (x *FriendSimpleInfo) GetFriendType() int32 {
	if x != nil {
		return x.FriendType
	}
	return 0
}

func (x *FriendSimpleInfo) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type FriendRecommendSimpleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecommendTime int64               `protobuf:"varint,1,opt,name=recommendTime,proto3" json:"recommendTime,omitempty"`
	FriendDatas   []*FriendSimpleInfo `protobuf:"bytes,2,rep,name=friendDatas,proto3" json:"friendDatas,omitempty"`
}

func (x *FriendRecommendSimpleInfo) Reset() {
	*x = FriendRecommendSimpleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_redis_cache_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendRecommendSimpleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendRecommendSimpleInfo) ProtoMessage() {}

func (x *FriendRecommendSimpleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_user_redis_cache_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendRecommendSimpleInfo.ProtoReflect.Descriptor instead.
func (*FriendRecommendSimpleInfo) Descriptor() ([]byte, []int) {
	return file_user_redis_cache_proto_rawDescGZIP(), []int{2}
}

func (x *FriendRecommendSimpleInfo) GetRecommendTime() int64 {
	if x != nil {
		return x.RecommendTime
	}
	return 0
}

func (x *FriendRecommendSimpleInfo) GetFriendDatas() []*FriendSimpleInfo {
	if x != nil {
		return x.FriendDatas
	}
	return nil
}

var File_user_redis_cache_proto protoreflect.FileDescriptor

var file_user_redis_cache_proto_rawDesc = []byte{
	0x0a, 0x16, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x64, 0x69, 0x73, 0x5f, 0x63, 0x61, 0x63,
	0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x75, 0x73, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaa,
	0x03, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68,
	0x65, 0x61, 0x64, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68,
	0x65, 0x61, 0x64, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6b, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x6c, 0x69, 0x6b, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73,
	0x74, 0x61, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x74, 0x61,
	0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x55,
	0x73, 0x65, 0x72, 0x48, 0x65, 0x6c, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x55,
	0x73, 0x65, 0x72, 0x48, 0x65, 0x6c, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x6c, 0x6f, 0x63,
	0x6b, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x75, 0x6e, 0x6c, 0x6f, 0x63,
	0x6b, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x07, 0x62, 0x75, 0x79, 0x44, 0x61, 0x74, 0x61, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x42, 0x75, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07,
	0x62, 0x75, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x68, 0x65, 0x61, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x43, 0x68, 0x65, 0x61,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x4a, 0x0a, 0x10, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1e, 0x0a, 0x0a, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x76, 0x0a, 0x19, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x72, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x0b, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0b, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x73, 0x42,
	0x08, 0x5a, 0x06, 0x2e, 0x2f, 0x3b, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_user_redis_cache_proto_rawDescOnce sync.Once
	file_user_redis_cache_proto_rawDescData = file_user_redis_cache_proto_rawDesc
)

func file_user_redis_cache_proto_rawDescGZIP() []byte {
	file_user_redis_cache_proto_rawDescOnce.Do(func() {
		file_user_redis_cache_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_redis_cache_proto_rawDescData)
	})
	return file_user_redis_cache_proto_rawDescData
}

var file_user_redis_cache_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_user_redis_cache_proto_goTypes = []interface{}{
	(*UserSimpleInfo)(nil),            // 0: UserSimpleInfo
	(*FriendSimpleInfo)(nil),          // 1: FriendSimpleInfo
	(*FriendRecommendSimpleInfo)(nil), // 2: FriendRecommendSimpleInfo
	(*BuyData)(nil),                   // 3: BuyData
}
var file_user_redis_cache_proto_depIdxs = []int32{
	3, // 0: UserSimpleInfo.buyData:type_name -> BuyData
	1, // 1: FriendRecommendSimpleInfo.friendDatas:type_name -> FriendSimpleInfo
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_user_redis_cache_proto_init() }
func file_user_redis_cache_proto_init() {
	if File_user_redis_cache_proto != nil {
		return
	}
	file_userDataNative_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_user_redis_cache_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSimpleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_redis_cache_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendSimpleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_redis_cache_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendRecommendSimpleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_redis_cache_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_user_redis_cache_proto_goTypes,
		DependencyIndexes: file_user_redis_cache_proto_depIdxs,
		MessageInfos:      file_user_redis_cache_proto_msgTypes,
	}.Build()
	File_user_redis_cache_proto = out.File
	file_user_redis_cache_proto_rawDesc = nil
	file_user_redis_cache_proto_goTypes = nil
	file_user_redis_cache_proto_depIdxs = nil
}
