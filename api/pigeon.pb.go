// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: pigeon.proto

package api

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Room struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId int64 `protobuf:"varint,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
}

func (x *Room) Reset() {
	*x = Room{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pigeon_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Room) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Room) ProtoMessage() {}

func (x *Room) ProtoReflect() protoreflect.Message {
	mi := &file_pigeon_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Room.ProtoReflect.Descriptor instead.
func (*Room) Descriptor() ([]byte, []int) {
	return file_pigeon_proto_rawDescGZIP(), []int{0}
}

func (x *Room) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

type RpcMessageParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Room         *Room  `protobuf:"bytes,1,opt,name=room,proto3" json:"room,omitempty"`
	User         *User  `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	IgnoreMyself bool   `protobuf:"varint,3,opt,name=ignoreMyself,proto3" json:"ignoreMyself,omitempty"`
	IsPersist    bool   `protobuf:"varint,4,opt,name=isPersist,proto3" json:"isPersist,omitempty"`
	Route        string `protobuf:"bytes,5,opt,name=route,proto3" json:"route,omitempty"`
}

func (x *RpcMessageParam) Reset() {
	*x = RpcMessageParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pigeon_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RpcMessageParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcMessageParam) ProtoMessage() {}

func (x *RpcMessageParam) ProtoReflect() protoreflect.Message {
	mi := &file_pigeon_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcMessageParam.ProtoReflect.Descriptor instead.
func (*RpcMessageParam) Descriptor() ([]byte, []int) {
	return file_pigeon_proto_rawDescGZIP(), []int{1}
}

func (x *RpcMessageParam) GetRoom() *Room {
	if x != nil {
		return x.Room
	}
	return nil
}

func (x *RpcMessageParam) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *RpcMessageParam) GetIgnoreMyself() bool {
	if x != nil {
		return x.IgnoreMyself
	}
	return false
}

func (x *RpcMessageParam) GetIsPersist() bool {
	if x != nil {
		return x.IsPersist
	}
	return false
}

func (x *RpcMessageParam) GetRoute() string {
	if x != nil {
		return x.Route
	}
	return ""
}

type RpcSendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Param *RpcMessageParam `protobuf:"bytes,1,opt,name=param,proto3" json:"param,omitempty"`
	Body  *Message         `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *RpcSendReq) Reset() {
	*x = RpcSendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pigeon_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RpcSendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSendReq) ProtoMessage() {}

func (x *RpcSendReq) ProtoReflect() protoreflect.Message {
	mi := &file_pigeon_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSendReq.ProtoReflect.Descriptor instead.
func (*RpcSendReq) Descriptor() ([]byte, []int) {
	return file_pigeon_proto_rawDescGZIP(), []int{2}
}

func (x *RpcSendReq) GetParam() *RpcMessageParam {
	if x != nil {
		return x.Param
	}
	return nil
}

func (x *RpcSendReq) GetBody() *Message {
	if x != nil {
		return x.Body
	}
	return nil
}

type RpcReqHelpReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Param *RpcMessageParam `protobuf:"bytes,1,opt,name=param,proto3" json:"param,omitempty"`
	Body  *GuildReqHelp    `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *RpcReqHelpReq) Reset() {
	*x = RpcReqHelpReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pigeon_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RpcReqHelpReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcReqHelpReq) ProtoMessage() {}

func (x *RpcReqHelpReq) ProtoReflect() protoreflect.Message {
	mi := &file_pigeon_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcReqHelpReq.ProtoReflect.Descriptor instead.
func (*RpcReqHelpReq) Descriptor() ([]byte, []int) {
	return file_pigeon_proto_rawDescGZIP(), []int{3}
}

func (x *RpcReqHelpReq) GetParam() *RpcMessageParam {
	if x != nil {
		return x.Param
	}
	return nil
}

func (x *RpcReqHelpReq) GetBody() *GuildReqHelp {
	if x != nil {
		return x.Body
	}
	return nil
}

type RpcRespHelpReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Param *RpcMessageParam `protobuf:"bytes,1,opt,name=param,proto3" json:"param,omitempty"`
	Body  *GuildRespHelp   `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *RpcRespHelpReq) Reset() {
	*x = RpcRespHelpReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pigeon_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RpcRespHelpReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcRespHelpReq) ProtoMessage() {}

func (x *RpcRespHelpReq) ProtoReflect() protoreflect.Message {
	mi := &file_pigeon_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcRespHelpReq.ProtoReflect.Descriptor instead.
func (*RpcRespHelpReq) Descriptor() ([]byte, []int) {
	return file_pigeon_proto_rawDescGZIP(), []int{4}
}

func (x *RpcRespHelpReq) GetParam() *RpcMessageParam {
	if x != nil {
		return x.Param
	}
	return nil
}

func (x *RpcRespHelpReq) GetBody() *GuildRespHelp {
	if x != nil {
		return x.Body
	}
	return nil
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`            // 消息唯一标识，保证随时间自增，使用snowflake算法
	From     int64  `protobuf:"varint,2,opt,name=from,proto3" json:"from,omitempty"`        // 发送者用户ID
	Name     string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`         // 发送者昵称
	HeadIcon string `protobuf:"bytes,4,opt,name=headIcon,proto3" json:"headIcon,omitempty"` // 发送者头像
	Type     string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`         // 消息类型 text/img/活动
	Content  string `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`   // 消息内容，根据type识别
	Time     int64  `protobuf:"varint,7,opt,name=time,proto3" json:"time,omitempty"`        // Unix时间戳，消息到达服务器时间
	Tag      int32  `protobuf:"varint,8,opt,name=tag,proto3" json:"tag,omitempty"`          // 用户标签: 来源/徽章/, 如channel，来自facebook/google
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pigeon_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_pigeon_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_pigeon_proto_rawDescGZIP(), []int{5}
}

func (x *Message) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Message) GetFrom() int64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *Message) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Message) GetHeadIcon() string {
	if x != nil {
		return x.HeadIcon
	}
	return ""
}

func (x *Message) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Message) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Message) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *Message) GetTag() int32 {
	if x != nil {
		return x.Tag
	}
	return 0
}

type Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool  `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Code    int32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"` // pangu code
}

func (x *Reply) Reset() {
	*x = Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pigeon_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reply) ProtoMessage() {}

func (x *Reply) ProtoReflect() protoreflect.Message {
	mi := &file_pigeon_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reply.ProtoReflect.Descriptor instead.
func (*Reply) Descriptor() ([]byte, []int) {
	return file_pigeon_proto_rawDescGZIP(), []int{6}
}

func (x *Reply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *Reply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type CreateRoomReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Room     *Room  `protobuf:"bytes,1,opt,name=room,proto3" json:"room,omitempty"`         // 房间ID，由调用方提供，若不存在，则snowflake初始化
	User     *User  `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`         // 默认加入的会长
	RoomName string `protobuf:"bytes,3,opt,name=roomName,proto3" json:"roomName,omitempty"` // 房间名
}

func (x *CreateRoomReq) Reset() {
	*x = CreateRoomReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pigeon_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoomReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoomReq) ProtoMessage() {}

func (x *CreateRoomReq) ProtoReflect() protoreflect.Message {
	mi := &file_pigeon_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoomReq.ProtoReflect.Descriptor instead.
func (*CreateRoomReq) Descriptor() ([]byte, []int) {
	return file_pigeon_proto_rawDescGZIP(), []int{7}
}

func (x *CreateRoomReq) GetRoom() *Room {
	if x != nil {
		return x.Room
	}
	return nil
}

func (x *CreateRoomReq) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *CreateRoomReq) GetRoomName() string {
	if x != nil {
		return x.RoomName
	}
	return ""
}

type DeleteRoomReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Room *Room `protobuf:"bytes,1,opt,name=room,proto3" json:"room,omitempty"`
}

func (x *DeleteRoomReq) Reset() {
	*x = DeleteRoomReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pigeon_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRoomReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoomReq) ProtoMessage() {}

func (x *DeleteRoomReq) ProtoReflect() protoreflect.Message {
	mi := &file_pigeon_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoomReq.ProtoReflect.Descriptor instead.
func (*DeleteRoomReq) Descriptor() ([]byte, []int) {
	return file_pigeon_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteRoomReq) GetRoom() *Room {
	if x != nil {
		return x.Room
	}
	return nil
}

type RoomMemberMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Room *Room `protobuf:"bytes,1,opt,name=room,proto3" json:"room,omitempty"`
	User *User `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *RoomMemberMap) Reset() {
	*x = RoomMemberMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pigeon_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomMemberMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomMemberMap) ProtoMessage() {}

func (x *RoomMemberMap) ProtoReflect() protoreflect.Message {
	mi := &file_pigeon_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomMemberMap.ProtoReflect.Descriptor instead.
func (*RoomMemberMap) Descriptor() ([]byte, []int) {
	return file_pigeon_proto_rawDescGZIP(), []int{9}
}

func (x *RoomMemberMap) GetRoom() *Room {
	if x != nil {
		return x.Room
	}
	return nil
}

func (x *RoomMemberMap) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

// todo: User范围过大，可能与其他Message冲突
type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pigeon_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_pigeon_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_pigeon_proto_rawDescGZIP(), []int{10}
}

func (x *User) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type UserToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User  *User  `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *UserToken) Reset() {
	*x = UserToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pigeon_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserToken) ProtoMessage() {}

func (x *UserToken) ProtoReflect() protoreflect.Message {
	mi := &file_pigeon_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserToken.ProtoReflect.Descriptor instead.
func (*UserToken) Descriptor() ([]byte, []int) {
	return file_pigeon_proto_rawDescGZIP(), []int{11}
}

func (x *UserToken) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *UserToken) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type CSHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId    int64 `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`          // 拉取指定房间的消息
	Count     int32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`                          // 拉取数量，maxMessageCount: 500，可配置
	MessageId int64 `protobuf:"varint,3,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"` // 消息标识，按照此条消息，向上或下根据offset定位指定消息区间
	Offset    int32 `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`                        // 正负值，根据消息ID定位
}

func (x *CSHistory) Reset() {
	*x = CSHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pigeon_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSHistory) ProtoMessage() {}

func (x *CSHistory) ProtoReflect() protoreflect.Message {
	mi := &file_pigeon_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSHistory.ProtoReflect.Descriptor instead.
func (*CSHistory) Descriptor() ([]byte, []int) {
	return file_pigeon_proto_rawDescGZIP(), []int{12}
}

func (x *CSHistory) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *CSHistory) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *CSHistory) GetMessageId() int64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *CSHistory) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type SCHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages []*Message `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"` // 消息列表
}

func (x *SCHistory) Reset() {
	*x = SCHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pigeon_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCHistory) ProtoMessage() {}

func (x *SCHistory) ProtoReflect() protoreflect.Message {
	mi := &file_pigeon_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCHistory.ProtoReflect.Descriptor instead.
func (*SCHistory) Descriptor() ([]byte, []int) {
	return file_pigeon_proto_rawDescGZIP(), []int{13}
}

func (x *SCHistory) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

type CSSend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // 消息
}

func (x *CSSend) Reset() {
	*x = CSSend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pigeon_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSSend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSSend) ProtoMessage() {}

func (x *CSSend) ProtoReflect() protoreflect.Message {
	mi := &file_pigeon_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSSend.ProtoReflect.Descriptor instead.
func (*CSSend) Descriptor() ([]byte, []int) {
	return file_pigeon_proto_rawDescGZIP(), []int{14}
}

func (x *CSSend) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

type SCSend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // 返回消息对象，下发消息ID与消息到达服务器时间(id, time)
}

func (x *SCSend) Reset() {
	*x = SCSend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pigeon_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCSend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCSend) ProtoMessage() {}

func (x *SCSend) ProtoReflect() protoreflect.Message {
	mi := &file_pigeon_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCSend.ProtoReflect.Descriptor instead.
func (*SCSend) Descriptor() ([]byte, []int) {
	return file_pigeon_proto_rawDescGZIP(), []int{15}
}

func (x *SCSend) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

type CSOffset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId    int64 `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`          // 房间ID
	MessageId int64 `protobuf:"varint,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"` // 消息标识，按照此条消息，定位聊天列表位置
}

func (x *CSOffset) Reset() {
	*x = CSOffset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pigeon_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSOffset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSOffset) ProtoMessage() {}

func (x *CSOffset) ProtoReflect() protoreflect.Message {
	mi := &file_pigeon_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSOffset.ProtoReflect.Descriptor instead.
func (*CSOffset) Descriptor() ([]byte, []int) {
	return file_pigeon_proto_rawDescGZIP(), []int{16}
}

func (x *CSOffset) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *CSOffset) GetMessageId() int64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

type SCOffset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset int32 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"` // 未读消息数量
}

func (x *SCOffset) Reset() {
	*x = SCOffset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pigeon_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCOffset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCOffset) ProtoMessage() {}

func (x *SCOffset) ProtoReflect() protoreflect.Message {
	mi := &file_pigeon_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCOffset.ProtoReflect.Descriptor instead.
func (*SCOffset) Descriptor() ([]byte, []int) {
	return file_pigeon_proto_rawDescGZIP(), []int{17}
}

func (x *SCOffset) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

var File_pigeon_proto protoreflect.FileDescriptor

var file_pigeon_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x70, 0x69, 0x67, 0x65, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10,
	0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x68, 0x65, 0x6c, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x1e, 0x0a, 0x04, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64,
	0x22, 0x9f, 0x01, 0x0a, 0x0f, 0x52, 0x70, 0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x12, 0x19, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x05, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x12,
	0x19, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x67,
	0x6e, 0x6f, 0x72, 0x65, 0x4d, 0x79, 0x73, 0x65, 0x6c, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x4d, 0x79, 0x73, 0x65, 0x6c, 0x66, 0x12, 0x1c,
	0x0a, 0x09, 0x69, 0x73, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x69, 0x73, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x22, 0x52, 0x0a, 0x0a, 0x52, 0x70, 0x63, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x12, 0x26, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x52, 0x70, 0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1c, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x5a, 0x0a, 0x0d, 0x52, 0x70, 0x63, 0x52, 0x65, 0x71,
	0x48, 0x65, 0x6c, 0x70, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x52, 0x70, 0x63, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12,
	0x21, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x48, 0x65, 0x6c, 0x70, 0x52, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x22, 0x5c, 0x0a, 0x0e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x70, 0x48, 0x65, 0x6c,
	0x70, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x52, 0x70, 0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x22, 0x0a, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x47, 0x75, 0x69,
	0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x48, 0x65, 0x6c, 0x70, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x22, 0xb1, 0x01, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x65, 0x61, 0x64, 0x49, 0x63, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x65, 0x61, 0x64, 0x49, 0x63, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x74, 0x61, 0x67, 0x22, 0x35, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x61, 0x0a, 0x0d, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x04,
	0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x52, 0x6f, 0x6f,
	0x6d, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x19, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x2a,
	0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x12,
	0x19, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e,
	0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x22, 0x45, 0x0a, 0x0d, 0x52, 0x6f,
	0x6f, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x12, 0x19, 0x0a, 0x04, 0x72,
	0x6f, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x52, 0x6f, 0x6f, 0x6d,
	0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x19, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x22, 0x1e, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x3c, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x19,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x71, 0x0a, 0x09, 0x43, 0x53, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x17, 0x0a, 0x07,
	0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72,
	0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x22, 0x31, 0x0a, 0x09, 0x53, 0x43, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12,
	0x24, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x08, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x2c, 0x0a, 0x06, 0x43, 0x53, 0x53, 0x65, 0x6e, 0x64, 0x12,
	0x22, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x08, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x2c, 0x0a, 0x06, 0x53, 0x43, 0x53, 0x65, 0x6e, 0x64, 0x12, 0x22, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x42, 0x0a, 0x08, 0x43, 0x53, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0x22, 0x0a, 0x08, 0x53, 0x43, 0x4f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x32, 0xbe, 0x02, 0x0a, 0x0a, 0x50, 0x69,
	0x67, 0x65, 0x6f, 0x6e, 0x47, 0x72, 0x70, 0x63, 0x12, 0x1d, 0x0a, 0x04, 0x53, 0x65, 0x6e, 0x64,
	0x12, 0x0b, 0x2e, 0x52, 0x70, 0x63, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x06, 0x2e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x23, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x48, 0x65,
	0x6c, 0x70, 0x12, 0x0e, 0x2e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x71, 0x48, 0x65, 0x6c, 0x70, 0x52,
	0x65, 0x71, 0x1a, 0x06, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x25, 0x0a, 0x08,
	0x52, 0x65, 0x73, 0x70, 0x48, 0x65, 0x6c, 0x70, 0x12, 0x0f, 0x2e, 0x52, 0x70, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x48, 0x65, 0x6c, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x06, 0x2e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x26, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f,
	0x6d, 0x12, 0x0e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65,
	0x71, 0x1a, 0x06, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x26, 0x0a, 0x0a, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x0e, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x06, 0x2e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x25, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x0e, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x61, 0x70,
	0x1a, 0x06, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x28, 0x0a, 0x0c, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x0e, 0x2e, 0x52, 0x6f, 0x6f,
	0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x1a, 0x06, 0x2e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x24, 0x0a, 0x0c, 0x50, 0x75, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0a, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x1a, 0x06, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x08, 0x5a, 0x06, 0x2e, 0x2f,
	0x3b, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pigeon_proto_rawDescOnce sync.Once
	file_pigeon_proto_rawDescData = file_pigeon_proto_rawDesc
)

func file_pigeon_proto_rawDescGZIP() []byte {
	file_pigeon_proto_rawDescOnce.Do(func() {
		file_pigeon_proto_rawDescData = protoimpl.X.CompressGZIP(file_pigeon_proto_rawDescData)
	})
	return file_pigeon_proto_rawDescData
}

var file_pigeon_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_pigeon_proto_goTypes = []interface{}{
	(*Room)(nil),            // 0: Room
	(*RpcMessageParam)(nil), // 1: RpcMessageParam
	(*RpcSendReq)(nil),      // 2: RpcSendReq
	(*RpcReqHelpReq)(nil),   // 3: RpcReqHelpReq
	(*RpcRespHelpReq)(nil),  // 4: RpcRespHelpReq
	(*Message)(nil),         // 5: Message
	(*Reply)(nil),           // 6: Reply
	(*CreateRoomReq)(nil),   // 7: CreateRoomReq
	(*DeleteRoomReq)(nil),   // 8: DeleteRoomReq
	(*RoomMemberMap)(nil),   // 9: RoomMemberMap
	(*User)(nil),            // 10: User
	(*UserToken)(nil),       // 11: UserToken
	(*CSHistory)(nil),       // 12: CSHistory
	(*SCHistory)(nil),       // 13: SCHistory
	(*CSSend)(nil),          // 14: CSSend
	(*SCSend)(nil),          // 15: SCSend
	(*CSOffset)(nil),        // 16: CSOffset
	(*SCOffset)(nil),        // 17: SCOffset
	(*GuildReqHelp)(nil),    // 18: GuildReqHelp
	(*GuildRespHelp)(nil),   // 19: GuildRespHelp
}
var file_pigeon_proto_depIdxs = []int32{
	0,  // 0: RpcMessageParam.room:type_name -> Room
	10, // 1: RpcMessageParam.user:type_name -> User
	1,  // 2: RpcSendReq.param:type_name -> RpcMessageParam
	5,  // 3: RpcSendReq.body:type_name -> Message
	1,  // 4: RpcReqHelpReq.param:type_name -> RpcMessageParam
	18, // 5: RpcReqHelpReq.body:type_name -> GuildReqHelp
	1,  // 6: RpcRespHelpReq.param:type_name -> RpcMessageParam
	19, // 7: RpcRespHelpReq.body:type_name -> GuildRespHelp
	0,  // 8: CreateRoomReq.room:type_name -> Room
	10, // 9: CreateRoomReq.user:type_name -> User
	0,  // 10: DeleteRoomReq.room:type_name -> Room
	0,  // 11: RoomMemberMap.room:type_name -> Room
	10, // 12: RoomMemberMap.user:type_name -> User
	10, // 13: UserToken.user:type_name -> User
	5,  // 14: SCHistory.messages:type_name -> Message
	5,  // 15: CSSend.message:type_name -> Message
	5,  // 16: SCSend.message:type_name -> Message
	2,  // 17: PigeonGrpc.Send:input_type -> RpcSendReq
	3,  // 18: PigeonGrpc.ReqHelp:input_type -> RpcReqHelpReq
	4,  // 19: PigeonGrpc.RespHelp:input_type -> RpcRespHelpReq
	7,  // 20: PigeonGrpc.CreateRoom:input_type -> CreateRoomReq
	8,  // 21: PigeonGrpc.DeleteRoom:input_type -> DeleteRoomReq
	9,  // 22: PigeonGrpc.AddMember:input_type -> RoomMemberMap
	9,  // 23: PigeonGrpc.RemoveMember:input_type -> RoomMemberMap
	11, // 24: PigeonGrpc.PutUserToken:input_type -> UserToken
	6,  // 25: PigeonGrpc.Send:output_type -> Reply
	6,  // 26: PigeonGrpc.ReqHelp:output_type -> Reply
	6,  // 27: PigeonGrpc.RespHelp:output_type -> Reply
	6,  // 28: PigeonGrpc.CreateRoom:output_type -> Reply
	6,  // 29: PigeonGrpc.DeleteRoom:output_type -> Reply
	6,  // 30: PigeonGrpc.AddMember:output_type -> Reply
	6,  // 31: PigeonGrpc.RemoveMember:output_type -> Reply
	6,  // 32: PigeonGrpc.PutUserToken:output_type -> Reply
	25, // [25:33] is the sub-list for method output_type
	17, // [17:25] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_pigeon_proto_init() }
func file_pigeon_proto_init() {
	if File_pigeon_proto != nil {
		return
	}
	file_guild_help_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_pigeon_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Room); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pigeon_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RpcMessageParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pigeon_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RpcSendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pigeon_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RpcReqHelpReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pigeon_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RpcRespHelpReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pigeon_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pigeon_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pigeon_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoomReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pigeon_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRoomReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pigeon_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomMemberMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pigeon_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pigeon_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pigeon_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pigeon_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pigeon_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSSend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pigeon_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCSend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pigeon_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSOffset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pigeon_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCOffset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pigeon_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pigeon_proto_goTypes,
		DependencyIndexes: file_pigeon_proto_depIdxs,
		MessageInfos:      file_pigeon_proto_msgTypes,
	}.Build()
	File_pigeon_proto = out.File
	file_pigeon_proto_rawDesc = nil
	file_pigeon_proto_goTypes = nil
	file_pigeon_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PigeonGrpcClient is the client API for PigeonGrpc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PigeonGrpcClient interface {
	Send(ctx context.Context, in *RpcSendReq, opts ...grpc.CallOption) (*Reply, error)
	ReqHelp(ctx context.Context, in *RpcReqHelpReq, opts ...grpc.CallOption) (*Reply, error)
	RespHelp(ctx context.Context, in *RpcRespHelpReq, opts ...grpc.CallOption) (*Reply, error)
	CreateRoom(ctx context.Context, in *CreateRoomReq, opts ...grpc.CallOption) (*Reply, error)
	DeleteRoom(ctx context.Context, in *DeleteRoomReq, opts ...grpc.CallOption) (*Reply, error)
	AddMember(ctx context.Context, in *RoomMemberMap, opts ...grpc.CallOption) (*Reply, error)
	RemoveMember(ctx context.Context, in *RoomMemberMap, opts ...grpc.CallOption) (*Reply, error)
	PutUserToken(ctx context.Context, in *UserToken, opts ...grpc.CallOption) (*Reply, error)
}

type pigeonGrpcClient struct {
	cc grpc.ClientConnInterface
}

func NewPigeonGrpcClient(cc grpc.ClientConnInterface) PigeonGrpcClient {
	return &pigeonGrpcClient{cc}
}

func (c *pigeonGrpcClient) Send(ctx context.Context, in *RpcSendReq, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/PigeonGrpc/Send", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pigeonGrpcClient) ReqHelp(ctx context.Context, in *RpcReqHelpReq, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/PigeonGrpc/ReqHelp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pigeonGrpcClient) RespHelp(ctx context.Context, in *RpcRespHelpReq, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/PigeonGrpc/RespHelp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pigeonGrpcClient) CreateRoom(ctx context.Context, in *CreateRoomReq, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/PigeonGrpc/CreateRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pigeonGrpcClient) DeleteRoom(ctx context.Context, in *DeleteRoomReq, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/PigeonGrpc/DeleteRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pigeonGrpcClient) AddMember(ctx context.Context, in *RoomMemberMap, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/PigeonGrpc/AddMember", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pigeonGrpcClient) RemoveMember(ctx context.Context, in *RoomMemberMap, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/PigeonGrpc/RemoveMember", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pigeonGrpcClient) PutUserToken(ctx context.Context, in *UserToken, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/PigeonGrpc/PutUserToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PigeonGrpcServer is the server API for PigeonGrpc service.
type PigeonGrpcServer interface {
	Send(context.Context, *RpcSendReq) (*Reply, error)
	ReqHelp(context.Context, *RpcReqHelpReq) (*Reply, error)
	RespHelp(context.Context, *RpcRespHelpReq) (*Reply, error)
	CreateRoom(context.Context, *CreateRoomReq) (*Reply, error)
	DeleteRoom(context.Context, *DeleteRoomReq) (*Reply, error)
	AddMember(context.Context, *RoomMemberMap) (*Reply, error)
	RemoveMember(context.Context, *RoomMemberMap) (*Reply, error)
	PutUserToken(context.Context, *UserToken) (*Reply, error)
}

// UnimplementedPigeonGrpcServer can be embedded to have forward compatible implementations.
type UnimplementedPigeonGrpcServer struct {
}

func (*UnimplementedPigeonGrpcServer) Send(context.Context, *RpcSendReq) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Send not implemented")
}
func (*UnimplementedPigeonGrpcServer) ReqHelp(context.Context, *RpcReqHelpReq) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReqHelp not implemented")
}
func (*UnimplementedPigeonGrpcServer) RespHelp(context.Context, *RpcRespHelpReq) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RespHelp not implemented")
}
func (*UnimplementedPigeonGrpcServer) CreateRoom(context.Context, *CreateRoomReq) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRoom not implemented")
}
func (*UnimplementedPigeonGrpcServer) DeleteRoom(context.Context, *DeleteRoomReq) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRoom not implemented")
}
func (*UnimplementedPigeonGrpcServer) AddMember(context.Context, *RoomMemberMap) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddMember not implemented")
}
func (*UnimplementedPigeonGrpcServer) RemoveMember(context.Context, *RoomMemberMap) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveMember not implemented")
}
func (*UnimplementedPigeonGrpcServer) PutUserToken(context.Context, *UserToken) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutUserToken not implemented")
}

func RegisterPigeonGrpcServer(s *grpc.Server, srv PigeonGrpcServer) {
	s.RegisterService(&_PigeonGrpc_serviceDesc, srv)
}

func _PigeonGrpc_Send_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RpcSendReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PigeonGrpcServer).Send(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PigeonGrpc/Send",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PigeonGrpcServer).Send(ctx, req.(*RpcSendReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PigeonGrpc_ReqHelp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RpcReqHelpReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PigeonGrpcServer).ReqHelp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PigeonGrpc/ReqHelp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PigeonGrpcServer).ReqHelp(ctx, req.(*RpcReqHelpReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PigeonGrpc_RespHelp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RpcRespHelpReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PigeonGrpcServer).RespHelp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PigeonGrpc/RespHelp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PigeonGrpcServer).RespHelp(ctx, req.(*RpcRespHelpReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PigeonGrpc_CreateRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRoomReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PigeonGrpcServer).CreateRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PigeonGrpc/CreateRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PigeonGrpcServer).CreateRoom(ctx, req.(*CreateRoomReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PigeonGrpc_DeleteRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRoomReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PigeonGrpcServer).DeleteRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PigeonGrpc/DeleteRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PigeonGrpcServer).DeleteRoom(ctx, req.(*DeleteRoomReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PigeonGrpc_AddMember_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoomMemberMap)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PigeonGrpcServer).AddMember(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PigeonGrpc/AddMember",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PigeonGrpcServer).AddMember(ctx, req.(*RoomMemberMap))
	}
	return interceptor(ctx, in, info, handler)
}

func _PigeonGrpc_RemoveMember_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoomMemberMap)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PigeonGrpcServer).RemoveMember(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PigeonGrpc/RemoveMember",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PigeonGrpcServer).RemoveMember(ctx, req.(*RoomMemberMap))
	}
	return interceptor(ctx, in, info, handler)
}

func _PigeonGrpc_PutUserToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserToken)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PigeonGrpcServer).PutUserToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PigeonGrpc/PutUserToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PigeonGrpcServer).PutUserToken(ctx, req.(*UserToken))
	}
	return interceptor(ctx, in, info, handler)
}

var _PigeonGrpc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "PigeonGrpc",
	HandlerType: (*PigeonGrpcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Send",
			Handler:    _PigeonGrpc_Send_Handler,
		},
		{
			MethodName: "ReqHelp",
			Handler:    _PigeonGrpc_ReqHelp_Handler,
		},
		{
			MethodName: "RespHelp",
			Handler:    _PigeonGrpc_RespHelp_Handler,
		},
		{
			MethodName: "CreateRoom",
			Handler:    _PigeonGrpc_CreateRoom_Handler,
		},
		{
			MethodName: "DeleteRoom",
			Handler:    _PigeonGrpc_DeleteRoom_Handler,
		},
		{
			MethodName: "AddMember",
			Handler:    _PigeonGrpc_AddMember_Handler,
		},
		{
			MethodName: "RemoveMember",
			Handler:    _PigeonGrpc_RemoveMember_Handler,
		},
		{
			MethodName: "PutUserToken",
			Handler:    _PigeonGrpc_PutUserToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pigeon.proto",
}
