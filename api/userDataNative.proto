syntax = "proto3";

option csharp_namespace = "MM.Message";
option go_package = "./;api";
option optimize_for = SPEED;

import "common.proto";

//地图上的泡泡
message MapBubble{
	float x = 1;
	float y = 2;
    int32 type = 3;
	repeated MaterialJson mats = 4;
    int32 id = 5;
    int64 startTimeUct = 6;
	repeated BubbleBoxData bubbleBoxMats = 7;
	int64 functionKey = 8;
	int32 isInit = 9;
	int32 level = 10;
	int32 maxMatsCount = 11;
    int32 createTotalEnterLevel = 12;
	string onlyId = 13;
	repeated SuperLevelBubbleData superBubbleMats = 14;
}

//功能建筑挤压泡泡数据
message FunctionMapBubble{
    int64 key = 1;
    repeated BuildingFuncData funcDatas = 2;
}

//功能建筑挤压泡泡数据
message FunctionMapBubbleData{
    repeated FunctionMapBubble bubbles = 1;
} 

//泡泡里的自定义宝箱
message BubbleBoxData{
	int32 boxID = 1;
	repeated MaterialJson mats = 7;
}

//超级关卡泡泡
message SuperLevelBubbleData{
	int32 itemType = 1;
	MapBubble bubbleData = 2;
	repeated MaterialJson itemData = 3;
}

//地图上的宝箱
message MapBasket{
	int32 type = 3;
    int64 time = 4;
    int32 click = 5;
	bool isget = 6;
	repeated MaterialJson mats = 7;
    bool timeBoxIdle = 8;
    int32 fromBubbleTotalEnterLevel = 9;
	int32 needCDTime = 10;
	bool isYetLevelUp = 11;
}

//UI宝箱的数据
message UITimeBoxData{
	repeated UITimeBox uiTimeBoxDatas = 1;
	repeated UITimeBox waitOpenTimeBoxQueue = 2;
	int32 freeBoxQueueIndex = 3;
	int32 payBoxQueueIndex = 4;
	int32 maxLevelQueueIndex = 5;
	int32 lastFreeBoxQueueID = 6;
	int32 lastPayBoxQueueID = 7;
}

message UITimeBox {
	//宝箱唯一的ID
	int64 boxOnlyId = 1;
	//宝箱的building表里的id
	int32 boxID = 2;
	//槽位编号
	int32 slotID = 3;
	//开始解锁时间
	int64 startUnLockTime = 4;
	//宝箱状态
	int32 boxState = 5;
	//宝箱CD时间
	int32 boxCdTime = 6;
}
  
//用户基础信息
message BaseData {
	string accountid = 1;
	//名字
	string name = 2;
	//创建时间
	uint32 createDay = 3;
	//token
	string token = 4;
	//userID
	int64 userID = 5;
	//headIcon
	string headIcon = 6;
	//fb ID
	string fbId = 7;
	//fb 头像URL
	string fbHeadUrl = 8;
	//device2
	string deviceID2 = 9;
	//本地版本号
	int32 version = 10; 
	//安装时的版本号
	int32 installVersion = 11;
	//是否已经被禁止
	int32 forbid = 12;
	//是否第一次进入
	int32 isFirstEnter = 13;
	//ABTest模式
	//0 NotSet
	//1 老用户
	//2 A
	//3 B
	int32 ABTestModel = 14;
	//是否是作弊用户
	int32 cheatUser = 15;
	//是否已经进入过Merge场景
	int32 enterMergeScene = 16;
	//国家
	string country = 17;
	//玩家被点赞的数量
	int32 likedCount = 18;
	//AB测试的配置
	repeated ABConfig ABConfig = 19;
	//是否是测试用户
	int32 testUser = 20;
    //之前的testType
	int32 oldTestType = 21;
}

message HeartData{
	//体力
	int32 heart = 1;
	//上次体力使用时间
	int32 lastHeartUseTime = 2;
    //无体力时间
    int64 noHeartTime = 3;
	//收到无限体力的时间
	int32 receiveInfiniteTime = 4;
}

//物品信息
message ItemData{
	repeated MaterialJson itemBags = 1;
	repeated int32 itemLockeds = 2;
	repeated int32 preItemAutoSelects = 3;
	repeated MaterialJson historyBuy = 4;
	repeated MaterialJson historyUse = 5;
}

//泡泡信息
message BubbleData{
	repeated MapBubble bubbles = 1;
}

//宝箱信息
message BasketData{
	repeated MapBasket baskets = 1;
}

//建筑信息
message MapBuildingData{
	//地图是否已经初始化
	int32 buildingInit = 1;
	//建筑
	repeated MapBuilding mapBuildings = 2;	
	//版本号
	int32 version = 3;
	//是否替换过
	bool isReplanceMagicStick = 4;
	//是否替换过魔法棒新
	bool isReplanceMagicStickNew = 5;
}

//升级建筑相关
message BuildingMergeCounter{
	repeated MaterialJson pieceMergeCounters = 1;	
}

//新建筑通知
message NewBuildingNotices{
	repeated int32 newBuildingNotices = 1;	
}

//解锁进度
message MapGridSprites{
	repeated MaterialJson gridSprites = 1;	
}

//系统设置
message SystemSetting {
	//音乐
	int32 se = 1;
	//音效
	int32 bgm = 2;
    //建筑详情是否折叠
    int32 flod = 3;
	//当前选择的语言
	int32 Language = 4;
	//当前是否开启通知
	int32 isOpenInform = 5;
	//是否关注我们
	int32 isAttention = 6;
	//是否重叠
	bool isOverLap = 7;
	//是否连锁合并
	bool isCombo = 8;
	//是否可以添加好友
	bool isAddFriends = 9;
	//是否是本地存档
	bool isLocal = 10;
	//是否开启融合泡泡
	bool isEnableFuseBubble = 11;
	//上次打开融合泡泡界面的时候
	int64 lastOpenFuseBubbleWindowTime = 12;
	//是否选择过语言
	bool isSelectLanguage = 13;
}

//相机数据
message CameraData{
    float x = 1;
    float y = 2;
    float orthog = 4;
    int64 timeUtc = 5;
}

//任务信息
message TaskData{
    repeated Task tasks = 1;
    repeated TaskEnd endTasks = 2;
    repeated TaskEnd allEndTasks = 3;
    repeated int32 endPlotIds = 4;
    //跳过次数
    int32 skipTimes = 5;
    //跳过开始时间
    int32 skipStartTime = 6;
	//高级元素任务的刷新次数
	int32 noCommonElementTaskRefreshTimes = 7;
}

//任务
message Task{
    //任务id
    int32 id = 1;
    //状态
    int32 state = 2;
    //进度
    int32 processes = 3;
    //开始时间
    int64 startTime = 4;
    //剧情选择参数
    int32 plotId = 5;
    //跳过所需钻石
    int32 skipCost = 6;
    //关卡结束奖励出现任务目标剩余次数N
    int32 targetShowLeftTimes = 7;
    //关卡结束奖励未选中次数M
    int32 noSelectedTimes = 8;
	//任务类型
	int32 taskType = 9;
	//任务目标类型
	int32 taskTargetType = 10;
	//任务目标
	int32 taskTarget = 11;
	//任务目标数量
	int32 taskTargetNum = 12;
	//任务奖励数据
	repeated MaterialJson taskRewards = 13;
	//x
	int32 taskLevelProvideTimes = 14;
	//z
	int32 taskLevelProvideNum = 15;
	//初始的目标ID
	int32 startTargetID = 16;
	//任务开始时关卡数
	int32 curLevelNum = 17;
}

//任务结束
message TaskEnd{
    int32 id = 1;
    int64 endTime = 2;
}

//剧情数据
message GamePlotData{
	repeated int32 allEndPlotID = 1;
}

//漂浮物数据
message FlotageData{
    int32 residueRefreshNumber = 1;
    repeated int32 specialFlotageTriggerNumber = 2;
    int64 resetTimer = 3;
	int32 continueNotTriggerNumer = 4;
	bool isTriggerFlotage = 5;
    int32 dotShowCount = 6;
    int32 dotClickCount = 7;
}

//好友数据
message LocalFriendData {
	//好友类型
	int32 friendType = 1;
	//userID
	int64 userID = 2;
	//名字
	string name = 3;
	//头像
	string headIcon = 4;
	//Level
	int32 level = 5;
	//被点赞的数量
	int32 likeCount = 6;
	//每日营地寻宝次数
	int32 treasureHuntCount = 7;
	//是否可以被寻宝
	bool isCanByTreasure = 8;
}

message FriendLocalData{
	//好友分享的领奖次数
	int32 ShareRewardNumber = 1;
	//上次分享的时间戳
	int64 LastShareTime = 2;
	//上次推荐好友的时间
	int64 LastRecommendFriendTime = 3;
	//本地存储的好友数据
	repeated LocalFriendData friendDatas = 4;
	//自己的寻宝次数
	int32 selfFindTreasureCount = 5;
	//上次寻宝的时间
	int64 LastFindTreasureTime = 6;
	//点赞过的好友列表
	repeated int64 LikeFriendList = 7;
	//删除过的好友列表
	repeated RemoveFriendData RemoveFriendList = 8;
	//机器人好友申请列表
	repeated int64 RobotApplyFriendList = 9;
	//给自己点过赞的机器人
	repeated int64 GiveSelfGiveLikeAIList = 10;
	//修改名称
	bool isChangeName = 11;
	//修改头像
	bool isChangeHead = 12;
	//是否去过寻宝
	bool isGoToFindTreasure = 13;
	//好友挖宝产出数据
	repeated FriendFindTreasureOutputData friendFindTreasureData = 14;
	//好友挖宝的奖励数据
	repeated MaterialJson FriendFindTreasureRewardData = 15;
	//是否首次刷新寻宝奖励
	bool isFristRefreshFindReward = 16;
	//上次查看好友列表的时间
	int64 lastSeeFriendApplyListTime = 17;
}

message CollectPiecesActivityData{
	bool activityIsEnable = 1;
	int32 nowActivityCollectStage = 2;//当前活动的收集阶段
	int32 nowActivityId = 3;//当前活动的ID
	int64 lastActivityEnableTime = 4;//上次活动开启时间
	repeated CollectPiecesData nowActivityCollectDatas = 5;//当前活动的收集物信息
	int64 lastActivityEndTime = 6;//上次活动结束时间
	bool IsCD = 7;//当前活动是否CD 
	bool IsInformActivityEnd = 8;//是否通知活动已经结束
	repeated int32 currentActCollectRewards = 9;//当前活动收集奖励
	repeated int32 currentActCollectNums = 10;//当前活动收集数量
	repeated int32 currentActCollectRewardNums = 11;//当前活动收集奖励数量
	int32 curStageCollectSumNum = 12;//这个阶段收集的总和
}

message CollectPiecesData{
	int32 id = 1;//收集物ID
	int32 num = 2;//收集物数量
}

message FriendFindTreasureOutputData{
	int32 id = 1;
	int32 singleDayMaxNum = 2;//单日最大上限
	int32 outPutWeight = 3;//产出权重
}

message RemoveFriendData{
	int64 id = 1;
	int32 GoFrHomeFindRewardNum = 2;//去好友家寻找奖励的次数
}

message AchievementData{
	//开始时间
	int64 startTime = 1;
	//上次登录时间
	int64 lastLoginTime = 2;
	//登录频率
	int32 loginFrequency = 3;
	//累计在线时长
	int32 onLineTime = 4;
	//累计合成次数
	int32 AddUpMergeNumber = 5;
	//当前剧情解锁的进度
	int32 NowPlotLockProgress = 6;
	//是否第一次通过第一关
	bool isFirstTimePassOneLevel = 7;
	//总合成次数不清零
	int32 AddUpMergeNumberNotClear = 8;
	//是否开启剧情累计合成
	bool IsOpenPlotAddUpMerge = 9;
}

//登录天数数据
message LoginDaysData {
	//累计登录天数
	int32 loginDays = 1;
	//连续登录天数
	int32 consecutiveLoginDays = 2;
	//最大连续登录天数
	int32 maxConsecutiveLoginDays = 3;
}

//结算产出时间宝箱数据
message BalaceTimeBoxData{
    int32 levelId = 1;//配置表ID
    repeated int32 boxQueue = 3;//宝箱队列
    int32 dropLevel = 4;//出现宝箱的关卡数
    int32 dropRate = 5;//出现宝箱的概率积累
    int32 timeBoxId = 6;//掉落的宝箱id
    int32 preLevel = 7;//前一次关卡号
}

//关卡结算解锁新元素触发次数
message GameEndBalaceData {
    repeated MaterialJson newPieceTimes = 1;
    //当前任务目标奖励的任务id
    int32 currentTargetTaskId = 2;
    //当前产出的Npc碎片id
    int32 currentNpcId = 3;
    //付费元素出现次数
    repeated MaterialJson payPieceTimes = 4;
    //时间宝箱产出数据
    BalaceTimeBoxData timeBox = 5;
    //记录宝箱历史数据
    repeated BalaceTimeBoxData historyTimeBoxs = 6;
}

//NPCEvent
message NPCEvent{
    int32 id = 1;
    int32 state = 2;
    int32 eventId = 3;
    int32 rwdId = 4;
    int32 curProcess = 5;
    int32 maxProcess = 6;
}

message NPCSpecialState{
    int32 npcId = 1;
    int32 eventId = 2;
    int32 endTimeUtc = 3;
}

//NPC数据
message NPCData{
    NPCEvent npcEvent = 1;
    //事件开始时间
    int32 eventStartTime = 2;
    //事件结束时间
    int32 eventEndTime = 3;
    //npc事件解锁时间
    int32 eventUnLockTime = 4;
    //已经显示过的失败关卡
    repeated int32 doFailLevels = 5;
    //事件结束时关卡数
    int32 eventEndTimeLevel = 6;
    //奖励数据
    repeated MaterialJson rwdData = 7;
    //npc特殊状态数据
    repeated NPCSpecialState specialData = 8;
}

//购买
message Buy{
    //商品id
    int32 id = 1;
    //购买时间
    int64 buyTime = 2;
    //所用的钱数
    int32 money = 5;
	//订单号
	string orderID = 6;
}

//购买信息
message BuyData{
    repeated Buy buys = 1;
    //首次购买时间
    int64 firstBuyTime = 2;
    //待发放内购物品列表
    repeated UnfinishedOrder unsendGoods = 3;
}

//未完成订单
message UnfinishedOrder{
    //计费点
    string productID = 1;
    //订单号
    string orderID = 2;
    //时间
    string date = 3;
}

//城堡建筑信息
message BuildingCastal{
    int32 expValue = 1;
    int32 timeUtc = 2;
    int32 times = 3;
    int32 showRwd = 4;
    repeated int32 rates = 5;
    int32 getStageRwdIndex = 7;
    int32 canLevelUp = 8;
    int32 nextIndex = 9;
    int32 currScore = 10;
    int32 checkOldPlayer = 11;//是否已兼容老玩家
}

//新NPC建筑信息
message NewBuildingNpc{
    int32 status = 1; //当前状态（1.可兑换，2.cd中，3.可领奖）
    int32 startTimeUtc = 2;//倒计时开始时间戳
    int32 totalTimes = 3;//累计兑换次数
    int32 cd = 4;//cd秒数
}

//新城堡建筑信息
message NewBuildingCastal{
    int32 starLevel = 1;//星星等级
    int32 expValue = 2;//当前等级的星星经验值
    int32 startTimeUtc = 3;//倒计时开始时间戳
    int32 cd = 4;//cd秒数
}

//建筑的功能信息
message BuildingFuncData{
    int32 funcId = 1;
    int64 timeUtc = 2;
    int32 times = 3;
    int32 cd = 4;
    int32 produceId = 5;
}

//地图上的建筑
message MapBuilding{
	int32 x = 1;
	int32 y = 2;
	int32 id = 3;
	repeated MaterialJson mats = 4;
    repeated BuildingFuncData funcDatas = 5;
    BuildingCastal castalData = 6;
    int64 cloneStartUct = 7;
    int32 isUnLock = 8;
    int32 buildType = 9;
	MapBasket basketData = 10;
    int32 unLockLevel = 11;
    NewBuildingCastal newCastalData = 12;
    NewBuildingNpc newNpcData = 13;
}

message LandUnLockData{
    //当前岛屿解锁的id
    int32 landUnLockID = 1;
    //是否显示等级满足指示箭头
    int32 isShowArrow = 2;
    //显示金币充足指示箭头结束时间
    int64 showCoinArrowTime = 3;
    //是否显示金币满足指示箭头
    int32 isShowCoinArrow = 4;
}

message NewLandUnLockData{
	repeated int32 nowUnLockLandIds = 1;
    //是否显示等级满足指示箭头
    int32 isShowArrow = 2;
    //显示金币充足指示箭头结束时间
    int64 showCoinArrowTime = 3;
    //是否显示金币满足指示箭头
    int32 isShowCoinArrow = 4;
}

message ExpData{
	//经验值
	int32 expValue = 1;
	//经验等级
	int32 expLevel = 2;
}

message LevelData{
	//关卡等级
	int32 level = 4;
	//连续通关的次数
	int32 continuelevel = 5;
	//连续通关失败的次数(一直统计)
	int32 continuelevelFail = 6;
	//连续通关成功的次数(一直统计)
    int32 continuelevelSuccess = 7;
    //没有使用道具且连续通关失败的次数(每日统计)
	int32 continuelevelFailWithNoItem = 8;
	//上次没有使用道具且连续通关失败的时间
	int64 continuelevelFailWithNoItemLastTime = 9;
	//累计进入游戏次数
	int32 totalEnterLevel = 10;
    //免费首个奖励BuildingId
    int32 rewardId = 11;
    //关卡难度
    int32 levelDiff = 12;
	//连续续步的次数
	int32 continueAddStep = 13;
    //关卡泡泡数据
    repeated MapBubble levelBubbles = 14;
    //连续通关失败（步数用尽）
    int32 continuelevelFailWithStepClear = 15;
    //上次进入关卡的文件名
    string lastLevelName = 16;
	//上次进入关卡的时间
	int64 lastEnterLevelTime = 17;
	//连续通关失败(不包括中途退出)
	int32 continuelevelFailWithoutQuit = 18;
	//当前关难度调节连续失败开启次数
	int32 continueDiffControlFail = 19;
}

//当天钻石使用记录匹配数据
message DiamondUseData{
    int32 minValue = 1;
    int32 maxValue = 2;
    int64 useTime = 3;
}

message MoneyData{
    //金币
    int32 money = 1;
    //钻石
    int32 diamond = 2;
    //是否当日消耗x钻石时间
    repeated DiamondUseData diamondUseDatas = 3;
    //消耗钻石数量
    int32 diamondUseNum = 4;
    //钻石的历史数据
    HistoryData diamondHistoryData = 5;
    //金币的历史数据
    HistoryData moneyHistoryData = 6;
    //内购累计购买金额
    int64 totalIapCharged = 7;
    //上次内购的时间
    int64 lastIapTime = 8;
    //上次内购的关卡
    int32 lastIapLevel = 9;
	//累计付费次数
	int32 totalIapCount = 10;
	//maya活动货币
	int32 mayaToken = 11;
}

//历史数据
message HistoryData {
    //历史总值
    int64 totalCount = 1;
    //付费购买的历史总值
    int64 buyTotalCount = 2;
    //每日消耗值
    repeated DayHistoryData daysConsume = 3;
    //每日获得值
    repeated DayHistoryData daysGet = 4;
    //每日充值获得值
    repeated DayHistoryData daysPayGet = 5;
    //每次消耗值
    repeated TimesHistoryData timesConsume = 6;
    //每次获得值
    repeated TimesHistoryData timesGet = 7;
    //每次充值获得值
    repeated TimesHistoryData timesPayGet = 8;
}

//每日历史数据
message DayHistoryData {
    int32 time = 1;
    int32 value = 2;
}

//每次记录历史数据
message TimesHistoryData {
    int32 time = 1;
    int32 value = 2;
    int32 from = 3;
}

//图鉴
message Illustration{
    int32 id = 1;//建筑id
    int32 isNew = 2;// 是否是Tap
}

//关卡宝箱数据
message LevelBoxData{
	int32 nowCommonBoxNum = 1;
	int32 nowMaxBoxNum = 2;
	bool isInit = 3;
	repeated int32 boxQueue = 4;
}

//图鉴信息
message IllustrationData{
    repeated Illustration illustrations = 1;
    //元素链解锁时间信息
    repeated MaterialJson lineUnLockTimes = 2;
    //最新的
    int32 lastNewBuildId = 3;
    // 是否已解锁
    int32 isUnlock = 4;
}

//好友类型
enum FriendType {
	//游戏好友
	Game = 0;
	//Facebook好友
	Facebook = 1;
	//机器人好友
	Robot = 2;
}

//好友数据
message FriendData {
	//好友类型
	FriendType friendType = 1;
	//userID
	int64 userID = 2;
	//名字
	string name = 3;
	//头像
	string headIcon = 4;
	//Level
	int32 level = 5;
	//被点赞的数量
	int32 likeCount = 6;
	//解锁地格的ID
	int32 unlockID = 7;
	//购买信息
    BuyData buyData = 8;
	//新的地格解锁数据
	repeated int32 newUnlockID = 9;
	//玩家的测试类型
	int32 testModel = 10;
	//是否是测试账号
	int32 testUser = 11;
}

message ClickBookId{
    int32 lineId = 1;
    repeated int32 clickIds = 2;
}

message CollectBookData{
    //已经点击的book
    repeated ClickBookId clickBookIds = 1;
    //已领取奖励的链
    repeated int32 getRewardLineIds = 2;
    //当前显示的order
    int32 currShowOrder = 3;
}

//城堡数据
message CastalData{
    int32 isShowTap = 1;// 是否显示过Tap
}

//建筑合成次数
message BuildingMergeData{
    repeated MaterialJson buildingMergeTimes = 1;
    int32 cloneBubbleTimes = 2;
}

//事件记录
message EventRecord{
    int32 recType = 1;
    int32 itemId = 2;
    int64 timeUtc = 3;
    int32 x = 4;
    int32 y = 5;
    int32 stable = 6;
    string itemData = 7;
    string userIcon = 8;
    int64 userId = 9;
}

//事件记录数据
message EventRecordData{
    repeated EventRecord eventRecords = 1;
    repeated int32 npcIds = 2;
    int32 wonderLineCount = 3;
}

//活动产出,活动标记id对应产出次数
message EventOutPutData{
    repeated MaterialJson eventIdWithTimes = 1; 
}

//魔力值数据
message MagicData{
	int32 magicValue = 1;
	int64 magicGetHistory = 2;
	int64 magicUseHistory = 3;
}


//Npc Wonder 数据记录
message NpcWonderData{
    int32 alreadyGuide = 1;
    int32 alreadyTap = 2;
    int32 alreadyMerge = 3;
}

//Npc 额外奖励的产出次数
message NpcExtra{
    int32 npcId = 1;
    repeated int32 times = 2;
}

//Npc 额外奖励的产出次数
message NpcPostion{
    int32 npcId = 1;
    int32 postion = 2;
}

//Npc 额外奖励的数据
message NpcExtraData{
    repeated NpcExtra npcExtra = 1;
    repeated NpcPostion npcPostion = 2;
}


//玩家的统计数据
message StatisticsData{
	int32 todayMergeTime = 1;
	int32 todayPlayTime = 2;
	int32 todayOpenCount = 3;
	int32 closeTime = 4;
	int32 totalOpenCount = 5;
	int32 totalPlayTime = 6;
	int32 active_Day = 7;
	int32 totalMergeTime = 8;
	int32 emptySpaceCount = 10;
	int32 todayFriendTreasureTimes = 11;
	int32 todayFriendVisitTimes = 12;
	int32 todayMaxLevelUseHeartTimes = 13;
	int32 todayFriendTreasureTime = 14;
	int32 todayFriendVisitTime = 15;
	int32 todayMaxLevelUseHeartTime = 16;
	repeated MaterialJson mergeOperator = 17;	
	int32 todayUtcMergeTime = 18;
	int32 todayUtcPlayTime = 19;
	int32 closeUtcTime = 20;
	int64 totalMergeCount = 21;
}

//钥匙数据
message KeyData{
	int32 keyValue = 1;
}
